Please generate a frontend code which implements a drawing application based on the HTML5 canvas element, allowing users to draw on the canvas, adjust brush size, select colors, and clear the canvas.Let's think step by step===============================
Sure, let's break it down into steps:

1. Create the HTML structure: We need a canvas element, color picker, brush size slider, and a clear button.

```html
<!DOCTYPE html>
<html>
<head>
    <title>HTML5 Canvas Drawing App</title>
    <style>
        #canvas {
            border: 1px solid black;
        }
    </style>
</head>
<body>
    <h1>HTML5 Canvas Drawing App</h1>
    <label for="colorPicker">Color:</label>
    <input type="color" id="colorPicker">
    <label for="brushSize">Brush Size:</label>
    <input type="range" id="brushSize" min="1" max="50">
    <button id="clearButton">Clear</button>
    <canvas id="canvas" width="800" height="600"></canvas>
    <script src="app.js"></script>
</body>
</html>
```

2. Create the JavaScript code: We need to handle the drawing on the canvas, color and brush size selection, and clearing the canvas.

```javascript
window.onload = function() {
    var canvas = document.getElementById('canvas');
    var context = canvas.getContext('2d');

    var drawing = false;
    var colorPicker = document.getElementById('colorPicker');
    var brushSize = document.getElementById('brushSize');
    var clearButton = document.getElementById('clearButton');

    canvas.onmousedown = function(e) {
        drawing = true;
        context.beginPath();
        context.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
    };

    canvas.onmousemove = function(e) {
        if(drawing) {
            context.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
            context.strokeStyle = colorPicker.value;
            context.lineWidth = brushSize.value;
            context.stroke();
        }
    };

    canvas.onmouseup = function() {
        drawing = false;
    };

    clearButton.onclick = function() {
        context.clearRect(0, 0, canvas.width, canvas.height);
    };
};
```

This code will create a simple drawing application where users can draw on the canvas, select a color, adjust the brush size, and clear the canvas. The drawing is done by tracking the mouse movements on the canvas. The color and brush size are set by the user through the color picker and brush size slider. The canvas is cleared by using the clearRect method of the canvas context.===============================
Sure, let's break it down into steps:

1. Create the HTML structure: We need a canvas element, color picker, brush size slider, and a clear button.

```html
<!DOCTYPE html>
<html>
<head>
    <title>HTML5 Canvas Drawing App</title>
    <style>
        #canvas {
            border: 1px solid black;
        }
    </style>
</head>
<body>
    <h1>HTML5 Canvas Drawing App</h1>
    <label for="colorPicker">Color:</label>
    <input type="color" id="colorPicker">
    <label for="brushSize">Brush Size:</label>
    <input type="range" id="brushSize" min="1" max="50">
    <button id="clearButton">Clear</button>
    <canvas id="canvas" width="800" height="600"></canvas>
    <script src="app.js"></script>
</body>
</html>
```

2. Create the JavaScript code: We need to handle the drawing on the canvas, color and brush size selection, and clearing the canvas.

```javascript
window.onload = function() {
    var canvas = document.getElementById('canvas');
    var context = canvas.getContext('2d');

    var drawing = false;
    var colorPicker = document.getElementById('colorPicker');
    var brushSize = document.getElementById('brushSize');
    var clearButton = document.getElementById('clearButton');

    canvas.onmousedown = function(e) {
        drawing = true;
        context.beginPath();
        context.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
    };

    canvas.onmousemove = function(e) {
        if(drawing) {
            context.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
            context.strokeStyle = colorPicker.value;
            context.lineWidth = brushSize.value;
            context.stroke();
        }
    };

    canvas.onmouseup = function() {
        drawing = false;
    };

    clearButton.onclick = function() {
        context.clearRect(0, 0, canvas.width, canvas.height);
    };
};
```

This code will create a simple drawing application where users can draw on the canvas, select a color, adjust the brush size, and clear the canvas. The drawing is done by tracking the mouse movements on the canvas. The color and brush size are set by the user through the color picker and brush size slider. The canvas is cleared by using the clearRect method of the canvas context.Please generate the codes for the three files in <Code> without any note:
index.html:
```html
<Code>
```
end index.html

style.css:
```css
<Code>
```
end style.css

script.js:
```javascript
<Code>
```
end script.js===============================
index.html:
```html
<!DOCTYPE html>
<html>
<head>
    <title>HTML5 Canvas Drawing App</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <h1>HTML5 Canvas Drawing App</h1>
    <label for="colorPicker">Color:</label>
    <input type="color" id="colorPicker">
    <label for="brushSize">Brush Size:</label>
    <input type="range" id="brushSize" min="1" max="50">
    <button id="clearButton">Clear</button>
    <canvas id="canvas" width="800" height="600"></canvas>
    <script src="script.js"></script>
</body>
</html>
```
end index.html

style.css:
```css
#canvas {
    border: 1px solid black;
}
```
end style.css

script.js:
```javascript
window.onload = function() {
    var canvas = document.getElementById('canvas');
    var context = canvas.getContext('2d');

    var drawing = false;
    var colorPicker = document.getElementById('colorPicker');
    var brushSize = document.getElementById('brushSize');
    var clearButton = document.getElementById('clearButton');

    canvas.onmousedown = function(e) {
        drawing = true;
        context.beginPath();
        context.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
    };

    canvas.onmousemove = function(e) {
        if(drawing) {
            context.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
            context.strokeStyle = colorPicker.value;
            context.lineWidth = brushSize.value;
            context.stroke();
        }
    };

    canvas.onmouseup = function() {
        drawing = false;
    };

    clearButton.onclick = function() {
        context.clearRect(0, 0, canvas.width, canvas.height);
    };
};
```
end script.js===============================
