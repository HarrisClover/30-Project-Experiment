[{"type": "system", "data": {"content": "You will get information about a codebase that is currently on disk in the current folder.\nFrom this you will answer with code blocks that includes all the necessary unix terminal commands to a) install dependencies b) run all necessary parts of the codebase (in parallel if necessary).\nDo not install globally. Do not use sudo.\nDo not explain the code, just give the commands.\nDo not use placeholders, use example values (like . for a folder argument) if necessary.\n", "additional_kwargs": {}, "type": "system"}}, {"type": "human", "data": {"content": "Information about the codebase:\n\nTo implement this task, we will use Flask, a micro web framework written in Python. We will also use the smtplib for sending emails in Python. The project will be structured as follows:\n\n- A main application file that will serve as the entry point of our application.\n- A templates directory that will contain our HTML templates.\n- A static directory that will contain our CSS files for styling.\n- A requirements.txt file that will list all the Python dependencies that our project needs.\n\nLet's start with the main application file:\n\napp.py\n```python\nfrom flask import Flask, render_template, request, redirect, url_for, flash\nimport smtplib\nimport random\n\napp = Flask(__name__)\napp.secret_key = 'supersecretkey'\n\n@app.route('/', methods=['GET', 'POST'])\ndef home():\n    if request.method == 'POST':\n        email = request.form['email']\n        code = generate_verification_code()\n        send_email(email, code)\n        flash('A verification code has been sent to your email address.', 'info')\n        return redirect(url_for('verify', email=email))\n    return render_template('home.html')\n\n@app.route('/verify', methods=['GET', 'POST'])\ndef verify():\n    if request.method == 'POST':\n        code = request.form['code']\n        if code == request.args.get('code'):\n            flash('Email verified successfully.', 'success')\n            return redirect(url_for('home'))\n        else:\n            flash('Invalid verification code.', 'danger')\n            return redirect(url_for('verify'))\n    return render_template('verify.html')\n\ndef generate_verification_code():\n    return ''.join(random.choice('0123456789') for _ in range(6))\n\ndef send_email(to, code):\n    server = smtplib.SMTP('smtp.gmail.com', 587)\n    server.starttls()\n    server.login('your-email@gmail.com', 'your-password')\n    message = 'Your verification code is: {}'.format(code)\n    server.sendmail('your-email@gmail.com', to, message)\n    server.quit()\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n\nNext, let's create our HTML templates:\n\ntemplates/home.html\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Verification Code</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\">\n</head>\n<body>\n    <form method=\"POST\">\n        <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n        <button type=\"submit\">Send Verification Code</button>\n    </form>\n</body>\n</html>\n```\n\ntemplates/verify.html\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Verify Email</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\">\n</head>\n<body>\n    <form method=\"POST\">\n        <input type=\"text\" name=\"code\" placeholder=\"Enter verification code\" required>\n        <button type=\"submit\">Verify</button>\n    </form>\n</body>\n</html>\n```\n\nNext, let's create our CSS file:\n\nstatic/style.css\n```css\nbody {\n    font-family: Arial, sans-serif;\n}\n\nform {\n    width: 300px;\n    margin: 0 auto;\n}\n\ninput, button {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n}\n```\n\nFinally, let's create our requirements.txt file:\n\nrequirements.txt\n```\nFlask==1.1.2\n```\n\nThis concludes a fully working implementation.", "additional_kwargs": {}, "type": "human", "example": false}}, {"type": "AIMessageChunk", "data": {"content": "To install dependencies:\n\n```bash\npython3 -m venv env\nsource env/bin/activate\npip install -r requirements.txt\n```\n\nTo run the codebase:\n\n```bash\npython app.py\n```", "additional_kwargs": {}, "type": "AIMessageChunk", "example": false}}]