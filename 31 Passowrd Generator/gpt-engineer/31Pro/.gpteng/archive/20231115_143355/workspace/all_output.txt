Let's start by creating the project structure. We will have the following files:

- main.py: This is the entry point of our application.
- password_generator.py: This file will contain the logic for generating the password.
- requirements.txt: This file will contain the list of dependencies required for our application.

Now, let's start writing the code for each file.

src/main.py
```python
from flask import Flask, request, jsonify
from password_generator import PasswordGenerator

app = Flask(__name__)

@app.route('/generate_password', methods=['POST'])
def generate_password():
    # Get the user's preferences from the request body
    length = request.json.get('length')
    use_uppercase = request.json.get('use_uppercase')
    use_lowercase = request.json.get('use_lowercase')
    use_numbers = request.json.get('use_numbers')

    # Create a password generator
    password_generator = PasswordGenerator(length, use_uppercase, use_lowercase, use_numbers)

    # Generate the password
    password = password_generator.generate()

    # Return the generated password
    return jsonify({'password': password})

if __name__ == '__main__':
    app.run(debug=True)
```

src/password_generator.py
```python
import random
import string

class PasswordGenerator:
    def __init__(self, length, use_uppercase, use_lowercase, use_numbers):
        self.length = length
        self.use_uppercase = use_uppercase
        self.use_lowercase = use_lowercase
        self.use_numbers = use_numbers

    def generate(self):
        # Create a list of characters to use in the password
        characters = ''

        if self.use_uppercase:
            characters += string.ascii_uppercase

        if self.use_lowercase:
            characters += string.ascii_lowercase

        if self.use_numbers:
            characters += string.digits

        # Generate the password
        password = ''.join(random.choice(characters) for _ in range(self.length))

        return password
```

requirements.txt
```
Flask==1.1.2
```

To run the application, you need to install the dependencies listed in the requirements.txt file using pip:

```
pip install -r requirements.txt
```

Then, you can run the application using the following command:

```
python main.py
```

This will start a web server on your local machine. You can generate a password by sending a POST request to http://localhost:5000/generate_password with a JSON body containing your password preferences. For example:

```
{
    "length": 10,
    "use_uppercase": true,
    "use_lowercase": true,
    "use_numbers": true
}
```

This concludes a fully working implementation.