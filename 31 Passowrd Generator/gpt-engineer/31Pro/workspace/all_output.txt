Let's start with the project structure. We will have the following files:

- `main.py`: This is the entry point of our application.
- `password_generator.py`: This file will contain the logic for generating the password.
- `requirements.txt`: This file will list all the Python dependencies that our project needs.

Now, let's start with the content of each file.

main.py
```python
from flask import Flask, request, jsonify
from password_generator import PasswordGenerator

app = Flask(__name__)

@app.route('/generate-password', methods=['POST'])
def generate_password():
    # Get the user's preferences from the request body
    preferences = request.get_json()

    # Validate the preferences
    if not all(key in preferences for key in ['length', 'use_uppercase', 'use_lowercase', 'use_numbers']):
        return jsonify({'error': 'Missing preferences'}), 400

    # Generate the password
    password_generator = PasswordGenerator(
        length=preferences['length'],
        use_uppercase=preferences['use_uppercase'],
        use_lowercase=preferences['use_lowercase'],
        use_numbers=preferences['use_numbers']
    )
    password = password_generator.generate()

    return jsonify({'password': password})

if __name__ == '__main__':
    app.run(debug=True)
```

password_generator.py
```python
import random
import string

class PasswordGenerator:
    def __init__(self, length, use_uppercase, use_lowercase, use_numbers):
        self.length = length
        self.use_uppercase = use_uppercase
        self.use_lowercase = use_lowercase
        self.use_numbers = use_numbers

    def generate(self):
        # Define the characters that can be used in the password
        characters = ''
        if self.use_uppercase:
            characters += string.ascii_uppercase
        if self.use_lowercase:
            characters += string.ascii_lowercase
        if self.use_numbers:
            characters += string.digits

        # Generate the password
        password = ''.join(random.choice(characters) for _ in range(self.length))

        return password
```

requirements.txt
```
flask==1.1.2
```

This concludes a fully working implementation.