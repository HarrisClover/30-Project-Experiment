To implement this feature, we will need a web application with a front-end and a back-end. The front-end will be responsible for displaying the list of online users and providing a search field for the user to enter a name or location. The back-end will be responsible for maintaining the list of online users and filtering it based on the search criteria.

We will use Flask for the back-end and HTML, CSS, and JavaScript for the front-end. We will also use AJAX to make asynchronous requests from the front-end to the back-end.

Here are the core files and their purposes:

1. `app.py`: This is the main entry point of the application. It initializes the Flask application and defines the routes.

2. `templates/index.html`: This is the main page of the application. It displays the list of online users and provides a search field for the user to enter a name or location.

3. `static/js/main.js`: This is the main JavaScript file. It handles the AJAX requests to the back-end and updates the list of online users based on the search criteria.

4. `requirements.txt`: This file lists all the Python dependencies that need to be installed for the application to run.

Let's start with the `app.py` file:

app.py
```python
from flask import Flask, render_template, request, jsonify
import json

app = Flask(__name__)

# List of online users
online_users = [
    {"name": "John Doe", "location": "New York"},
    {"name": "Jane Doe", "location": "Los Angeles"},
    # Add more users as needed
]

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/search', methods=['POST'])
def search():
    query = request.form.get('query')
    results = [user for user in online_users if query in user['name'] or query in user['location']]
    return jsonify(results)

if __name__ == '__main__':
    app.run(debug=True)
```

Next, let's create the `index.html` file:

templates/index.html
```html
<!DOCTYPE html>
<html>
<head>
    <title>Online Users</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="/static/js/main.js"></script>
</head>
<body>
    <input type="text" id="search" placeholder="Enter name or location">
    <ul id="user-list">
        <!-- The list of users will be populated here -->
    </ul>
</body>
</html>
```

Now, let's create the `main.js` file:

static/js/main.js
```javascript
$(document).ready(function() {
    $('#search').on('input', function() {
        var query = $(this).val();
        $.post('/search', {query: query}, function(data) {
            $('#user-list').empty();
            for (var i = 0; i < data.length; i++) {
                $('#user-list').append('<li>' + data[i].name + ', ' + data[i].location + '</li>');
            }
        });
    });
});
```

Finally, let's create the `requirements.txt` file:

requirements.txt
```
Flask==1.1.2
```

This concludes a fully working implementation.