To implement this task, we will use HTML, CSS, and JavaScript. We will also use Bootstrap for styling and layout, and jQuery for handling events and making AJAX requests. 

Here are the core files and their purposes:

1. index.html: This is the main HTML file that will contain the structure of the user interface.

2. style.css: This file will contain all the custom CSS styles.

3. script.js: This file will contain all the JavaScript code for handling events and making AJAX requests.

4. package.json: This file will contain all the project dependencies.

5. README.md: This file will contain instructions on how to run the project.

Let's start with the entry point file:

index.html
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Movie Streaming Service</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1 class="text-center my-4">Movie Streaming Service</h1>
        <div class="row">
            <div class="col-md-12">
                <input type="text" id="search" class="form-control" placeholder="Search for a movie...">
            </div>
        </div>
        <div id="movies" class="row mt-5"></div>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="script.js"></script>
</body>
</html>
```

style.css
```css
body {
    background-color: #f4f4f4;
}

.movie-card {
    margin-bottom: 20px;
}

.movie-card img {
    width: 100%;
    height: auto;
}

.movie-card .card-body {
    padding: 15px;
}
```

script.js
```javascript
$(document).ready(function() {
    $('#search').on('keyup', function(e) {
        let searchText = e.target.value;
        getMovies(searchText);
    });
});

function getMovies(searchText) {
    $.ajax({
        method: 'GET',
        url: 'http://www.omdbapi.com/?s=' + searchText + '&apikey=your_api_key',
        success: function(data) {
            let movies = data.Search;
            let output = '';
            $.each(movies, function(index, movie) {
                output += `
                    <div class="col-md-3">
                        <div class="card movie-card">
                            <img src="${movie.Poster}" class="card-img-top" alt="${movie.Title}">
                            <div class="card-body">
                                <h5 class="card-title">${movie.Title}</h5>
                                <p class="card-text">${movie.Year}</p>
                            </div>
                        </div>
                    </div>
                `;
            });
            $('#movies').html(output);
        }
    });
}
```

package.json
```json
{
  "name": "movie-streaming-service",
  "version": "1.0.0",
  "description": "A user interface for a movie streaming service",
  "main": "script.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yourusername/movie-streaming-service.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/yourusername/movie-streaming-service/issues"
  },
  "homepage": "https://github.com/yourusername/movie-streaming-service#readme",
  "dependencies": {
    "jquery": "^3.5.1",
    "bootstrap": "^4.5.0"
  }
}
```

README.md
```markdown
# Movie Streaming Service

This is a user interface for a movie streaming service. It includes features for displaying movie titles, cover images, ratings, and summaries. It also includes a search function.

## How to Run

1. Clone this repository.
2. Open `index.html` in your web browser.
```

This concludes a fully working implementation.