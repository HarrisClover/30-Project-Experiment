Sure, I will provide you with the necessary HTML, CSS, and JavaScript files to create a simple website that fetches and displays jokes. The website will have a button that, when clicked, will fetch a new joke and display it on the page.

Let's start with the HTML file:

index.html
```html
<!DOCTYPE html>
<html>
<head>
    <title>Joke Generator</title>
    <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Random Joke Generator</h1>
        <p id="joke">Loading...</p>
        <button id="new-joke">Get Another Joke</button>
    </div>
    <script src="script.js"></script>
</body>
</html>
```

This is a simple HTML file that includes a title, a paragraph for displaying the joke, and a button for fetching a new joke. It also links to the CSS and JavaScript files we will create next.

Next, let's create the CSS file to style our webpage:

styles.css
```css
body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #f0f0f0;
}

.container {
    text-align: center;
}

#joke {
    font-size: 24px;
    margin-bottom: 20px;
}

#new-joke {
    font-size: 20px;
    padding: 10px 20px;
    cursor: pointer;
}
```

This CSS file styles the webpage to center the content, sets the font, and styles the joke and button elements.

Finally, let's create the JavaScript file that will fetch and display the jokes:

script.js
```javascript
document.addEventListener('DOMContentLoaded', (event) => {
    fetchJoke();
    document.getElementById('new-joke').addEventListener('click', fetchJoke);
});

function fetchJoke() {
    fetch('https://official-joke-api.appspot.com/random_joke')
        .then(response => response.json())
        .then(data => {
            document.getElementById('joke').innerText = `${data.setup} ${data.punchline}`;
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('joke').innerText = 'Failed to fetch a joke. Please try again.';
        });
}
```

This JavaScript file adds an event listener to the button that fetches a new joke when clicked. It fetches jokes from the Official Joke API and displays them on the webpage. If there's an error fetching a joke, it displays an error message.

This concludes a fully working implementation.