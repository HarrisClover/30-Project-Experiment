To achieve this, we will use Flask, a micro web framework written in Python. We will also use HTML and JavaScript for the frontend. 

Let's start with the Python code:

src/main.py
```python
from flask import Flask, render_template, jsonify
from src.notifications import get_notifications

app = Flask(__name__)

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/notifications', methods=['GET'])
def notifications():
    return jsonify(get_notifications())

if __name__ == '__main__':
    app.run(debug=True)
```

This is the entry point of our application. It defines two routes: the home route that renders our HTML page and the notifications route that returns the latest notifications in JSON format.

src/notifications.py
```python
import time

def get_notifications():
    # For simplicity, we will return a static list of notifications.
    # In a real application, these would probably come from a database.
    notifications = [
        {'time': time.time() - 60, 'message': 'Notification 1'},
        {'time': time.time() - 120, 'message': 'Notification 2'},
        {'time': time.time() - 180, 'message': 'Notification 3'},
    ]

    # Sort the notifications in reverse chronological order.
    notifications.sort(key=lambda x: x['time'], reverse=True)

    return notifications
```

This file defines a function that returns a list of notifications. Each notification is a dictionary with a timestamp and a message. The notifications are sorted in reverse chronological order.

Now let's move on to the frontend:

templates/index.html
```html
<!DOCTYPE html>
<html>
<head>
    <title>Notifications</title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
</head>
<body>
    <button id="show-notifications">Show Notifications</button>
    <ul id="notifications"></ul>

    <script src="/static/js/main.js"></script>
</body>
</html>
```

This is a simple HTML page with a button and an unordered list. When the button is clicked, we will fetch the latest notifications from the server and display them in the list.

static/js/main.js
```javascript
$(document).ready(function() {
    $('#show-notifications').click(function() {
        $.getJSON('/notifications', function(data) {
            $('#notifications').empty();
            $.each(data, function(key, val) {
                $('#notifications').append('<li>' + val.message + '</li>');
            });
        });
    });
});
```

This JavaScript code uses jQuery to fetch the latest notifications from the server when the button is clicked. It then empties the list and adds a new list item for each notification.

Finally, we need to specify our Python dependencies:

requirements.txt
```
Flask==1.1.2
```

This concludes a fully working implementation.