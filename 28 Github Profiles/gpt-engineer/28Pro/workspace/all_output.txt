Sure, let's start with the HTML file which will be the entry point of our application.

index.html
```html
<!DOCTYPE html>
<html>
<head>
    <title>Github User Search</title>
    <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
    <div id="app">
        <h1>Github User Search</h1>
        <input type="text" id="username" placeholder="Enter Github username">
        <button id="search">Search</button>
        <div id="user-info"></div>
        <div id="repo-list"></div>
    </div>
    <script src="app.js"></script>
</body>
</html>
```

Next, we will create a CSS file to style our application.

styles.css
```css
body {
    font-family: Arial, sans-serif;
}

#app {
    width: 600px;
    margin: 0 auto;
}

#username {
    width: 80%;
    padding: 10px;
}

#search {
    width: 15%;
    padding: 10px;
    background-color: #4CAF50;
    color: white;
    border: none;
    cursor: pointer;
}

#user-info, #repo-list {
    margin-top: 20px;
}
```

Finally, we will create a JavaScript file to handle the user interactions and fetch data from the Github API.

app.js
```javascript
document.getElementById('search').addEventListener('click', function() {
    var username = document.getElementById('username').value;
    fetch('https://api.github.com/users/' + username)
        .then(response => response.json())
        .then(data => {
            var userInfo = document.getElementById('user-info');
            userInfo.innerHTML = '<h2>' + data.name + '</h2><p>' + data.bio + '</p>';
            fetch(data.repos_url)
                .then(response => response.json())
                .then(repos => {
                    var repoList = document.getElementById('repo-list');
                    repoList.innerHTML = '<h2>Repositories</h2><ul>';
                    repos.forEach(repo => {
                        repoList.innerHTML += '<li><a href="' + repo.html_url + '">' + repo.name + '</a></li>';
                    });
                    repoList.innerHTML += '</ul>';
                });
        });
});
```

This concludes a fully working implementation.